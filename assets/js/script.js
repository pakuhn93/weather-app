// Storing Search History
// WHEN i input a city
// THEN i put that city into an object that holds my search history
// THEN i display a button on the screen with that city's name
// THEN i put it into localStorage for future use
// OPTIONAL: create a reset storage button that clears the object of its properties

// 5-Day Forecast
// on the UI, the user will see 5 cards with a header of 5-Day Forecast
// these 5 cards will store a Date, Weather Type (such as clear skies), Temperature, Wind Speed, and Humidity
    // the units of strage will be Farenheit, MPH, and %
    // the information will be extracted from the weather API that is given to us
// the base cards will hold placeholder values of '-' or 'N/A'
// WHEN i input a city
// THEN the program will fetch the data values needed for my cards and display it to the user
    // the current day will be larger than the future dates


var keyAPI = "bf7cb2d724c564ebc990d9e8ec52e7d2";
var locationLimit = 1; //default values for geocode API
var cityNameDefault = "Felicity";
var stateCodeDefault = "California";
var countryCodeDefault = "USA"; //uses ISO 3166 country codes
var geocodeAPI = "http://api.openweathermap.org/geo/1.0/direct?q={city name},{state code},{country code}&limit=" + locationLimit + "&appid=" + keyAPI;
var latitudeDefault = "0";
var longitudeDefault = "0";
var weatherAPI = "api.openweathermap.org/data/2.5/forecast?lat={lat}&lon={lon}&appid=" + keyAPI;
var weatherData; //holds data generated by the weather API

//uses geocode API to generate location based on city name
// function returns an array containing [lat, long]
function generateLocation(cityName, stateCode, countryCode){
    var locationGeocode = geocodeAPI;
    var latLong = [latitudeDefault, longitudeDefault];
    locationGeocode = locationGeocode.replace("{city name}", cityName); //set city name
    locationGeocode = locationGeocode.replace("{state code}", stateCode); //set state code | NOTE: this only works for US, populate a dropdown menu only for USA country codes
    locationGeocode = locationGeocode.replace("{country code}", countryCode); //set country code
    console.log(locationGeocode);
    fetch(locationGeocode)
        .then (function (response){
            return response.json();
        })
        .then (function (data){
            console.log(data);
            latLong[0] = data[0].lat;
            latLong[1] = data[0].lon;
            console.log(latLong);
        });
    

    // return latLong;
}

generateLocation(cityNameDefault, stateCodeDefault, countryCodeDefault);




// fetch(weatherAPI)
//     .then(function (response){
//         return response.json();
//     })
//     .then(function(data){
//         weatherData = data;
//     });


function grabData(){

}

grabData();